@page "/dall-e"
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using ExploreGPT.Data;
@inject IOpenAIService openAiService
<h3>Dall-e API</h3>
<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form">
                <MudTextField T="string" Label="Username" @bind-Value="Username" Required="true" RequiredError="please type user name!" />
                <MudTextField T="string" Label="Prompt" @bind-Value="InputPrompt" Required="true" RequiredError="please type prompt!" />
                <MudTextField T="int" Label="Prompt" @bind-Value="NumImages" Required="true" RequiredError="please define number of images!" />
                <MudSelect T="string" @bind-Value="ImageSize" Label="Image Size" AnchorOrigin="Origin.BottomCenter">
                    <MudSelectItem Value="@(StaticValues.ImageStatics.Size.Size256)"  >256</MudSelectItem>
                    <MudSelectItem Value="@(StaticValues.ImageStatics.Size.Size512)" >512</MudSelectItem>
                    <MudSelectItem Value="@(StaticValues.ImageStatics.Size.Size1024)" >1024</MudSelectItem>
                </MudSelect>
            </MudForm>
        </MudPaper>
        <MudPaper Class="pa-4 mt-4">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" DisableElevation="true" OnClick="@(()=>Submit())">Submit</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" DisableElevation="true" OnClick="@(()=>Reset())" Class="mx-2">Reset</MudButton>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="5">
        <MudPaper Class="pa-4 mud-height-full">
            <MudText Typo="Typo.subtitle2">@($"Results ({results.Count})")</MudText>
                @if (!string.IsNullOrEmpty(ErrorMsg))
            {
                <MudText Typo="Typo.subtitle2">@($"Error: {ErrorMsg}")</MudText>
            }
           
                @foreach (var result in results)
            {
                <MudImage Fluid="true" Src="@result.Url" Alt="@result.Title"></MudImage>
            }
        </MudPaper>
    </MudItem>
</MudGrid>
@code {
    string ErrorMsg = string.Empty;
    string Username = "TestUser";
    string ImageSize = StaticValues.ImageStatics.Size.Size256;
    int NumImages = 2;
    string InputPrompt="Superhero dari indonesia";
    bool success;
    List<ImageModel> results = new();
    int MaxToken = 50;
    MudForm form;
    async Task Reset()
    {
        form.Reset();
        results.Clear();
    }
    async Task Submit()
    {
        ErrorMsg = string.Empty;
        var imageResult = await openAiService.Image.CreateImage(new ImageCreateRequest
            {
                Prompt = InputPrompt,
                N = NumImages,
                Size = ImageSize,
                ResponseFormat = StaticValues.ImageStatics.ResponseFormat.Url,
                User = Username
            });


        if (imageResult.Successful)
        {

            Console.WriteLine(string.Join("\n", imageResult.Results.Select(r => r.Url)));
            var count = 1;
            results.AddRange(imageResult.Results.Select(x => new ImageModel() { Url = x.Url, Title = $"Image-{count++}" }));
        }
        else
        {
            var res = imageResult.Error.Message;
            Console.WriteLine(res);
            ErrorMsg = res;
            //results.Add(res);
        }
    }


}